name: CI-CD
on: 
  push:
    branches: ["main"]
  workflow_dispatch:
  
jobs:
  VALIDATIONS:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install dependencies and run Prettier
      working-directory: app 
      run: |
        npm install --force
        npm run format
        npm run lint
        
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16 
    - name: Install backend dependencies
      working-directory: source 
      run: npm install
      
    - name: Run Jest tests
      working-directory: source 
      run: npm run test
      env:
        JWT_KEY: ${{ secrets.JWT_KEY }}
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
  
  DOCKER:
    runs-on: ubuntu-latest
    needs: [VALIDATIONS]
    steps:
      - name: Getting the source code
        uses: actions/checkout@v3.5.3
        
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USR }}
          password: ${{ secrets.DOCKERHUB_PWD }}
        
      - name: Docker build frontend
        uses: docker/build-push-action@v4.1.1
        with: 
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: |
            romanostd/terminator-front:v${{ github.run_number }}
             romanostd/terminator-front:v1
      - name: Docker build backend
        uses: docker/build-push-action@v4.1.1
        with: 
          context: ./source
          file: ./source/Dockerfile
          push: true
          tags: |
            romanostd/terminator-back:v${{ github.run_number }}
             romanostd/terminator-back:v1

  DEPLOY:
    runs-on: ubuntu-latest
    needs: [DOCKER]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Update ECS Service for Frontend
        run: |
          CLUSTER_NAME_FRONT="terminator-deploy-front"
          SERVICE_NAME_FRONT="terminator-deploy-front"
          
          sed -i 's|romanostd/terminator-front:latest|romanostd/terminator-front:v${{ github.run_number }}|' .github/workflows/ecs-task-definition-front.json

          aws ecs register-task-definition --cli-input-json file://.github/workflows/ecs-task-definition-front.json
          aws ecs update-service --cluster $CLUSTER_NAME_FRONT --service $SERVICE_NAME_FRONT --task-definition terminator-deploy-front

      - name: Update ECS Service for Backend
        run: |
          CLUSTER_NAME_BACK="terminator-deploy"
          SERVICE_NAME_BACK="terminator-service-prod"
          
          sed -i 's|romanostd/terminator-back:latest|romanostd/terminator-back:v${{ github.run_number }}|' .github/workflows/ecs-task-definition-back.json
          
          aws ecs register-task-definition --cli-input-json file://.github/workflows/ecs-task-definition-back.json
          aws ecs update-service --cluster $CLUSTER_NAME_BACK --service $SERVICE_NAME_BACK --task-definition terminator-deploy-back

          
